$date
	Wed Nov 25 07:29:39 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module lab6_tb $end
$var wire 8 ! wout [7:0] $end
$var reg 1 " clock $end
$var reg 8 # retain [7:0] $end
$var reg 4 $ rin1 [3:0] $end
$var reg 4 % rin2 [3:0] $end
$var reg 4 & rin3 [3:0] $end
$scope module inst_l6 $end
$var wire 1 " clock $end
$var wire 4 ' in1 [3:0] $end
$var wire 4 ( in2 [3:0] $end
$var wire 4 ) in3 [3:0] $end
$var wire 8 * prev [7:0] $end
$var wire 1 + t0 $end
$var wire 1 , t1 $end
$var wire 8 - w1 [7:0] $end
$var wire 8 . out [7:0] $end
$var wire 4 / cs3 [3:0] $end
$scope module co $end
$var wire 1 " clock $end
$var wire 1 0 in1 $end
$var wire 1 1 in2 $end
$var wire 1 2 in3 $end
$var wire 1 3 in4 $end
$var wire 1 4 in5 $end
$var reg 1 5 flipflop_out $end
$var reg 1 6 lut_out $end
$var reg 33 7 mem [32:0] $end
$var reg 1 8 out $end
$upscope $end
$scope module lt0a $end
$var wire 1 " clock $end
$var wire 1 9 in1 $end
$var wire 1 : in2 $end
$var wire 1 ; in3 $end
$var wire 1 < in4 $end
$var wire 1 = in5 $end
$var reg 1 > flipflop_out $end
$var reg 1 ? lut_out $end
$var reg 33 @ mem [32:0] $end
$var reg 1 A out $end
$upscope $end
$scope module lt0b $end
$var wire 1 " clock $end
$var wire 1 B in1 $end
$var wire 1 C in2 $end
$var wire 1 D in3 $end
$var wire 1 E in4 $end
$var wire 1 F in5 $end
$var reg 1 G flipflop_out $end
$var reg 1 H lut_out $end
$var reg 33 I mem [32:0] $end
$var reg 1 J out $end
$upscope $end
$scope module lt1a $end
$var wire 1 " clock $end
$var wire 1 K in1 $end
$var wire 1 L in2 $end
$var wire 1 M in3 $end
$var wire 1 N in4 $end
$var wire 1 O in5 $end
$var reg 1 P flipflop_out $end
$var reg 1 Q lut_out $end
$var reg 33 R mem [32:0] $end
$var reg 1 S out $end
$upscope $end
$scope module lt1b $end
$var wire 1 " clock $end
$var wire 1 T in1 $end
$var wire 1 U in2 $end
$var wire 1 V in3 $end
$var wire 1 W in4 $end
$var wire 1 X in5 $end
$var reg 1 Y flipflop_out $end
$var reg 1 Z lut_out $end
$var reg 33 [ mem [32:0] $end
$var reg 1 \ out $end
$upscope $end
$scope module lt2a $end
$var wire 1 " clock $end
$var wire 1 ] in1 $end
$var wire 1 ^ in2 $end
$var wire 1 _ in3 $end
$var wire 1 ` in4 $end
$var wire 1 a in5 $end
$var reg 1 b flipflop_out $end
$var reg 1 c lut_out $end
$var reg 33 d mem [32:0] $end
$var reg 1 e out $end
$upscope $end
$scope module lt2b $end
$var wire 1 " clock $end
$var wire 1 f in1 $end
$var wire 1 g in2 $end
$var wire 1 h in3 $end
$var wire 1 i in4 $end
$var wire 1 j in5 $end
$var reg 1 k flipflop_out $end
$var reg 1 l lut_out $end
$var reg 33 m mem [32:0] $end
$var reg 1 n out $end
$upscope $end
$scope module lt3a $end
$var wire 1 " clock $end
$var wire 1 o in1 $end
$var wire 1 p in2 $end
$var wire 1 q in3 $end
$var wire 1 r in4 $end
$var wire 1 s in5 $end
$var reg 1 t flipflop_out $end
$var reg 1 u lut_out $end
$var reg 33 v mem [32:0] $end
$var reg 1 w out $end
$upscope $end
$scope module lt3b $end
$var wire 1 " clock $end
$var wire 1 x in1 $end
$var wire 1 y in2 $end
$var wire 1 z in3 $end
$var wire 1 { in4 $end
$var wire 1 | in5 $end
$var reg 1 } flipflop_out $end
$var reg 1 ~ lut_out $end
$var reg 33 !" mem [32:0] $end
$var reg 1 "" out $end
$upscope $end
$scope module lt4a $end
$var wire 1 " clock $end
$var wire 1 #" in1 $end
$var wire 1 $" in2 $end
$var wire 1 %" in3 $end
$var wire 1 &" in4 $end
$var wire 1 '" in5 $end
$var reg 1 (" flipflop_out $end
$var reg 1 )" lut_out $end
$var reg 33 *" mem [32:0] $end
$var reg 1 +" out $end
$upscope $end
$scope module lt4b $end
$var wire 1 " clock $end
$var wire 1 ," in1 $end
$var wire 1 -" in2 $end
$var wire 1 ." in3 $end
$var wire 1 /" in4 $end
$var wire 1 0" in5 $end
$var reg 1 1" flipflop_out $end
$var reg 1 2" lut_out $end
$var reg 33 3" mem [32:0] $end
$var reg 1 4" out $end
$upscope $end
$scope module lt5a $end
$var wire 1 " clock $end
$var wire 1 5" in1 $end
$var wire 1 6" in2 $end
$var wire 1 7" in3 $end
$var wire 1 8" in4 $end
$var wire 1 9" in5 $end
$var reg 1 :" flipflop_out $end
$var reg 1 ;" lut_out $end
$var reg 33 <" mem [32:0] $end
$var reg 1 =" out $end
$upscope $end
$scope module lt5b $end
$var wire 1 " clock $end
$var wire 1 >" in1 $end
$var wire 1 ?" in2 $end
$var wire 1 @" in3 $end
$var wire 1 A" in4 $end
$var wire 1 B" in5 $end
$var reg 1 C" flipflop_out $end
$var reg 1 D" lut_out $end
$var reg 33 E" mem [32:0] $end
$var reg 1 F" out $end
$upscope $end
$scope module lt6a $end
$var wire 1 " clock $end
$var wire 1 G" in1 $end
$var wire 1 H" in2 $end
$var wire 1 I" in3 $end
$var wire 1 J" in4 $end
$var wire 1 K" in5 $end
$var reg 1 L" flipflop_out $end
$var reg 1 M" lut_out $end
$var reg 33 N" mem [32:0] $end
$var reg 1 O" out $end
$upscope $end
$scope module lt6b $end
$var wire 1 " clock $end
$var wire 1 P" in1 $end
$var wire 1 Q" in2 $end
$var wire 1 R" in3 $end
$var wire 1 S" in4 $end
$var wire 1 T" in5 $end
$var reg 1 U" flipflop_out $end
$var reg 1 V" lut_out $end
$var reg 33 W" mem [32:0] $end
$var reg 1 X" out $end
$upscope $end
$scope module lt7a $end
$var wire 1 " clock $end
$var wire 1 Y" in1 $end
$var wire 1 Z" in2 $end
$var wire 1 [" in3 $end
$var wire 1 \" in4 $end
$var wire 1 ]" in5 $end
$var reg 1 ^" flipflop_out $end
$var reg 1 _" lut_out $end
$var reg 33 `" mem [32:0] $end
$var reg 1 a" out $end
$upscope $end
$scope module lt7b $end
$var wire 1 " clock $end
$var wire 1 b" in1 $end
$var wire 1 c" in2 $end
$var wire 1 d" in3 $end
$var wire 1 e" in4 $end
$var wire 1 f" in5 $end
$var reg 1 g" flipflop_out $end
$var reg 1 h" lut_out $end
$var reg 33 i" mem [32:0] $end
$var reg 1 j" out $end
$upscope $end
$scope module s1 $end
$var wire 1 " clock $end
$var wire 1 k" in1 $end
$var wire 1 l" in2 $end
$var wire 1 m" in3 $end
$var wire 1 n" in4 $end
$var wire 1 o" in5 $end
$var reg 1 p" flipflop_out $end
$var reg 1 q" lut_out $end
$var reg 33 r" mem [32:0] $end
$var reg 1 s" out $end
$upscope $end
$scope module s2 $end
$var wire 1 " clock $end
$var wire 1 t" in1 $end
$var wire 1 u" in2 $end
$var wire 1 v" in3 $end
$var wire 1 w" in4 $end
$var wire 1 x" in5 $end
$var reg 1 y" flipflop_out $end
$var reg 1 z" lut_out $end
$var reg 33 {" mem [32:0] $end
$var reg 1 |" out $end
$upscope $end
$scope module s3 $end
$var wire 1 " clock $end
$var wire 1 }" in1 $end
$var wire 1 ~" in2 $end
$var wire 1 !# in3 $end
$var wire 1 "# in4 $end
$var wire 1 ## in5 $end
$var reg 1 $# flipflop_out $end
$var reg 1 %# lut_out $end
$var reg 33 &# mem [32:0] $end
$var reg 1 '# out $end
$upscope $end
$upscope $end
$upscope $end
$scope module switch_box_4x4 $end
$var wire 4 (# in [3:0] $end
$var wire 4 )# out [3:0] $end
$var reg 16 *# configure [15:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx *#
bx )#
bz (#
0'#
b11111111000000001111111100000000 &#
0%#
x$#
0##
0"#
0!#
0~"
0}"
0|"
b11110000111100001111000011110000 {"
0z"
xy"
0x"
0w"
0v"
0u"
0t"
0s"
b11001100110011001100110011001100 r"
0q"
xp"
0o"
0n"
0m"
0l"
0k"
0j"
b10000000000000000000 i"
0h"
xg"
0f"
0e"
0d"
0c"
0b"
0a"
b0 `"
0_"
x^"
0]"
0\"
0["
0Z"
0Y"
0X"
b1000000000000000000 W"
0V"
xU"
0T"
0S"
0R"
0Q"
0P"
0O"
b0 N"
0M"
xL"
0K"
0J"
0I"
0H"
0G"
0F"
b1000000000000000000 E"
0D"
xC"
0B"
0A"
0@"
0?"
0>"
0="
b0 <"
0;"
x:"
09"
08"
07"
06"
05"
04"
b10000000000000000 3"
02"
x1"
00"
0/"
0."
0-"
0,"
0+"
b0 *"
0)"
x("
0'"
0&"
0%"
0$"
0#"
0""
b1000 !"
0~
x}
0|
0{
0z
0y
0x
0w
b0 v
0u
xt
0s
0r
0q
0p
0o
0n
b100 m
0l
xk
0j
0i
0h
0g
0f
0e
b0 d
0c
xb
0a
0`
0_
0^
0]
0\
b100 [
0Z
xY
0X
0W
0V
0U
0T
0S
b0 R
0Q
xP
0O
0N
0M
0L
0K
1J
b1 I
1H
xG
0F
0E
0D
0C
0B
0A
b0 @
0?
x>
0=
0<
0;
0:
09
08
b11111111111111110000000000000000 7
06
x5
04
03
02
01
00
b0 /
b1 .
b0 -
0,
0+
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
0"
b1 !
$end
#10
0>
0P
0b
0t
0("
0:"
0L"
0^"
1G
0Y
0k
0}
01"
0C"
0U"
0g"
0p"
0y"
0$#
05
1"
#20
19
1L
0"
b1 #
b1 *
#25
0J
b10 !
b10 .
1\
0H
1Z
1,"
1?"
1P"
1c"
1B
1U
1f
1y
b101 %
b101 (
b101 $
b101 '
#30
1Y
0G
1"
#40
09
1=
1K
0L
1^
0"
b10 #
b10 *
#50
1s"
1q"
1l"
1u"
1~"
11
b100 !
b100 .
0\
b1 /
1n
0Z
1l
0,"
1-"
1>"
0?"
0P"
1Q"
1b"
0c"
0B
1C
1T
0U
0f
1g
1x
0y
1"
b1010 %
b1010 (
b1010 $
b1010 '
#60
0=
0K
1O
1]
0^
1p
0"
b100 #
b100 *
#70
1p"
1k
0Y
1"
#75
0s"
0q"
0l"
0u"
0~"
01
b0 /
0n
b1000 !
b1000 .
1""
0l
1~
1,"
1?"
1P"
1c"
1B
1U
1f
1y
b1111 %
b1111 (
b1111 $
b1111 '
#80
0O
0]
1a
1o
0p
1$"
0"
b1000 #
b1000 *
#90
0k
1}
0p"
1"
#100
1|"
1z"
1m"
1v"
1!#
12
b10 /
14"
b10000 !
b10000 .
0""
12"
0~
1F
1X
1j
1|
10"
1B"
1T"
1f"
0,"
0-"
0>"
0?"
0P"
0Q"
0b"
0c"
0B
0C
0T
0U
0f
0g
0x
0y
0"
b1000 &
b1000 )
b0 %
b0 (
b0 $
b0 '
#110
1y"
11"
0}
1"
#120
0a
0o
1s
1#"
0$"
16"
0"
b10000 #
b10000 *
#125
0|"
0z"
0m"
0v"
0!#
02
b0 /
04"
b100000 !
b100000 .
1F"
02"
1D"
1,"
1?"
1P"
1c"
1B
1U
1f
1y
b101 %
b101 (
b101 $
b101 '
#130
01"
1C"
0y"
1"
#140
0s
0#"
1'"
15"
06"
1H"
0"
b100000 #
b100000 *
#150
1'#
1%#
1n"
1w"
1"#
13
b1000000 !
b1000000 .
0F"
b100 /
1X"
0D"
1V"
0,"
1-"
1>"
0?"
0P"
1Q"
1b"
0c"
0B
1C
1T
0U
0f
1g
1x
0y
1"
b1010 %
b1010 (
b1010 $
b1010 '
#160
0'"
05"
19"
1G"
0H"
1Z"
0"
b1000000 #
b1000000 *
#170
0C"
1U"
1$#
1"
#175
0'#
b10000000 !
b10000000 .
18
0%#
16
0n"
0w"
0"#
03
1o"
1x"
1##
14
0X"
b1000 /
1j"
0V"
1h"
1,"
1?"
1P"
1c"
1B
1U
1f
1y
b1111 %
b1111 (
b1111 $
b1111 '
#180
09"
0G"
1K"
1Y"
0Z"
0"
b10000000 #
b10000000 *
#190
15
0$#
1g"
0U"
1"
#200
0"
#210
1"
#220
0"
#230
1"
#240
0"
#250
1"
#260
0"
#270
1"
#280
0"
#290
1"
#300
0"
#310
1"
#320
0"
#330
1"
#340
0"
#350
1"
#360
0"
#370
1"
#380
0"
#390
1"
#400
0"
#410
1"
#420
0"
#430
1"
#440
0"
#450
1"
#460
0"
#470
1"
#480
0"
#490
1"
#500
0"
#510
1"
#520
0"
#530
1"
#540
0"
#550
1"
#560
0"
#570
1"
#580
0"
#590
1"
#600
0"
#610
1"
#620
0"
#630
1"
#640
0"
#650
1"
#660
0"
#670
1"
#680
0"
#690
1"
#700
0"
#710
1"
#720
0"
#730
1"
#740
0"
#750
1"
#760
0"
#770
1"
#780
0"
#790
1"
#800
0"
#810
1"
#820
0"
#830
1"
#840
0"
#850
1"
#860
0"
#870
1"
#880
0"
#890
1"
#900
0"
#910
1"
#920
0"
#930
1"
#940
0"
#950
1"
#960
0"
#970
1"
#980
0"
#990
1"
#1000
0"
